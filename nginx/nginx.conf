user nginx;
worker_processes auto;  # Automatically adjust this to the number of CPU cores.

events {
    worker_connections 1024;  # Max number of simultaneous connections per worker.
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Sendfile settings to optimize static file serving
    sendfile on;

    # Gzip settings for compression
    gzip on;
    gzip_disable "msie6";

    # Main server block for serving both the frontend and proxying backend requests
    server {
        listen 80;  # Listen on port 80 for HTTP connections.
        server_name myapp.com;  # Replace with your domain name.

        # Root directory for the frontend static files
        root /usr/share/nginx/html;

        # Serve static files directly from Nginx
        location / {
            try_files $uri $uri/ /index.html;  # Serves index.html for any path not matched by a file.
        }

        # Proxy backend Flask app requests
        location /api/ {
            proxy_pass http://backend:5000;  # Assuming the Flask app is named 'backend' in docker-compose and listens on port 5000
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
