# nginx/nginx.conf

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # Disables caching, note out this codeblock for deployment. Implement 
    #proxy_buffering off;
    #proxy_cache_bypass $http_upgrade;
    #proxy_no_cache $http_upgrade;
    #proxy_set_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    #add_header Last-Modified $date_gmt;
    #add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    #if_modified_since off;
    #expires off;
    #etag off;

    # Load modular configfiles from the /etc/nginx/conf.d directory.
    # details @ http://nginx.org/en/docs/ngx_core_module.html#include
    include /etc/nginx/conf.d/*.conf;

    # Define upstream server groups
    upstream flaskDB {
        server flaskDB:5000; # Use service name
    }

    upstream ReactApp {
        server ReactApp:3000; # Use service name to proxy to React app
    }

    upstream sharpChaperone {
        server sharpChaperone:5001; # Use service name
    }

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  localhost;

        # React Application Root
        location / {
            proxy_pass http://react-app:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # Proxy requests to C# sharpChaperone Service
        location /api/csharp {
            proxy_pass         http://sharpChaperone;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        # Proxy requests to Python Flask Service
        location /api/python {
            proxy_pass         http://flaskDB;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        # Error pages
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
